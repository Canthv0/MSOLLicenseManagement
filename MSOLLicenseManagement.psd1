#
# Module manifest for module 'MSOLLicenseManagement'
#
# Generated by: matbyrd@microsoft.com
#
# Generated on: 01/18/2018
#

@{

    # Script module or binary module file associated with this manifest.
    RootModule        = '.\MSOLLicenseManagement.psm1'

    # Version number of this module.
    ModuleVersion     = '2.2.0'

    # Supported PSEditions
    # CompatiblePSEditions = @()

    # ID used to uniquely identify this module
    GUID              = 'd4b067f8-2fdd-4f65-8bc6-4514f706f0d4'

    # Author of this module
    Author            = 'matbyrd@microsoft.com'

    # Company or vendor of this module
    CompanyName       = 'Matt Byrd'

    # Copyright statement for this module
    Copyright         = '(c) 2017 matbyrd@microsoft.com. All rights reserved.'

    # Description of the functionality provided by this module
    Description       = 'Provides functions to simplify the management of License Assignment, Swapping, Updating, and Reporting in Office 365.'

    # Minimum version of the Windows PowerShell engine required by this module
    PowerShellVersion = '5.0'

    # Name of the Windows PowerShell host required by this module
    # PowerShellHostName = ''

    # Minimum version of the Windows PowerShell host required by this module
    # PowerShellHostVersion = ''

    # Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
    # DotNetFrameworkVersion = ''

    # Minimum version of the common language runtime (CLR) required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
    # CLRVersion = ''

    # Processor architecture (None, X86, Amd64) required by this module
    # ProcessorArchitecture = ''

    # Modules that must be imported into the global environment prior to importing this module
    # RequiredModules = @()

    # Assemblies that must be loaded prior to importing this module
    # RequiredAssemblies = @()

    # Script files (.ps1) that are run in the caller's environment prior to importing this module.
    # ScriptsToProcess = @()

    # Type files (.ps1xml) to be loaded when importing this module
    # TypesToProcess = @()

    # Format files (.ps1xml) to be loaded when importing this module
    # FormatsToProcess = @()

    # Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
    NestedModules     = @(
        '.\Cmdlet\Get-MSOLUserLicenseReport.ps1'
        '.\Cmdlet\Convert-MSOLUserLIcenseToExplict.ps1',
        '.\Cmdlet\Add-MSOLUserLicense.ps1',
        '.\Cmdlet\Remove-MSOLUserLicense.ps1',
        '.\Cmdlet\Set-MSOLUserLicensePlan.ps1',
        '.\Cmdlet\Update-MSOLUserLicensePlan.ps1',
        '.\Cmdlet\Switch-MSOLUserLicense.ps1',
        '.\Cmdlet\Get-MGUserLicenseReport.ps1',
        '.\Cmdlet\Get-MGUserLicenseAssignementState.ps1'
    )

    # Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.
    FunctionsToExport = 'Get-MSOLUserLicenseReport', 'Convert-MSOLUserLicenseToExplicit', 'Add-MSOLUserLicense', 'Remove-MSOLUserLicense', 'Set-MSOLUserLicensePlan', 'Update-MSOLUserLicensePlan', 'Switch-MSOLUserLicense', 'Get-MGUserLicenseReport'

    # Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.
    CmdletsToExport   = @()

    # Variables to export from this module
    # VariablesToExport = @()

    # Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.
    AliasesToExport   = @()

    # DSC resources to export from this module
    # DscResourcesToExport = @()

    # List of all modules packaged with this module
    # ModuleList = @()

    # List of all files packaged with this module
    # FileList = @()

    # Private data to pass to the module specified in RootModule/ModuleToProcess. This may also contain a PSData hashtable with additional module metadata used by PowerShell.
    PrivateData       = @{

        PSData = @{

            # Tags applied to this module. These help with module discovery in online galleries.
            Tags         = @('O365', 'MSOL', 'License', 'Management', 'SKU', 'Plan', 'AzueAD', 'Bulk')

            # A URL to the license for this module.
            # LicenseUri = ''

            # A URL to the main website for this project.
            ProjectUri   = 'https://github.com/Canthv0/MSOLLicenseManagement'

            # A URL to an icon representing this module.
            # IconUri = ''

            # ReleaseNotes of this module
            ReleaseNotes = '
        2.1.0 - Added support to exporting deleted users to to log report.
        2.0.5 - Fixed issue with not logging invocation data prior to throwing incompatible switch error
        2.0.4 - Fixed issue where incorrect typing was causing Update-MSOLUserLicensePlan to fail in all cases (Thx Dan Y.)
        2.0.3 - Fixed error checkingin Update-MsolUserLicensePlan
        2.0.2 - Update-MSOLUserLicensePlan provide better infromation when failing
        2.0.2 - Update-MSOLUserLicensePlan will better handle trying to update a user if the SKU is not found
        2.0.1 - Added logging of cmdlet invocation to log file
        2.0.1 - Added Logging of module version to log file
        2.0.1 - fixed a missed case in Update-MSOLUserLicensePlan where it would try to update a user who did not have the SKU assigned
        2.0.1 - Updated cmdlet help
        Major Rework of the cmdlets!
        * Cmdlets should no longer STOP by default when they encounter an error
        * To Revert back to this behavior set the ErrorActionPreference to stop in the shell using $ErrorActionPreference = "Stop"
        * I have done all of the testing I could but there might be some issues still, please report them so they can get fixed'

            # External dependent modules of this module
            # ExternalModuleDependencies = ''

        } # End of PSData hashtable
    
    } # End of PrivateData hashtable

    # HelpInfo URI of this module
    # HelpInfoURI = ''

    # Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
    # DefaultCommandPrefix = ''

}

